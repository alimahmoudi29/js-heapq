'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = SingleElementDeque;

var _error = require('../../error');

var _Deque = require('./Deque');

var _Deque2 = _interopRequireDefault(_Deque);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SingleElementDeque(iterable) {

	this.empty = true;

	this.value = 0;

	if (iterable !== null) this.extend(iterable);
}

SingleElementDeque.prototype = new _Deque2.default();

SingleElementDeque.prototype.len = function () {

	return this.empty ? 0 : 1;
};

SingleElementDeque.prototype.capacity = function () {

	return 1;
};

SingleElementDeque.prototype.values = regeneratorRuntime.mark(function _callee() {
	return regeneratorRuntime.wrap(function _callee$(_context) {
		while (1) {
			switch (_context.prev = _context.next) {
				case 0:
					if (!this.empty) {
						_context.next = 2;
						break;
					}

					return _context.abrupt('return');

				case 2:
					_context.next = 4;
					return this.value;

				case 4:
				case 'end':
					return _context.stop();
			}
		}
	}, _callee, this);
});

SingleElementDeque.prototype.append = SingleElementDeque.prototype.appendleft = function (x) {

	this.empty = false;
	this.value = x;

	return this;
};

SingleElementDeque.prototype.clear = function () {

	this.empty = true;
	this.value = 0;

	return this;
};

SingleElementDeque.prototype.copy = function () {

	return new SingleElementDeque(this);
};

SingleElementDeque.prototype.pop = SingleElementDeque.prototype.popleft = function () {

	if (this.empty) throw new _error.IndexError("pop / popleft");

	var value = this.value;

	this.empty = true;
	this.value = 0;

	return value;
};

SingleElementDeque.prototype.get = function (i) {

	if (this.empty || i !== 0) throw new _error.IndexError(i);

	return this.value;
};

SingleElementDeque.prototype.set = function (i, value) {

	if (this.empty || i !== 0) throw new _error.IndexError(i);

	this.value = value;

	return this;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kZXF1ZS9jb3JlL1NpbmdsZUVsZW1lbnREZXF1ZS5qcyJdLCJuYW1lcyI6WyJTaW5nbGVFbGVtZW50RGVxdWUiLCJpdGVyYWJsZSIsImVtcHR5IiwidmFsdWUiLCJleHRlbmQiLCJwcm90b3R5cGUiLCJsZW4iLCJjYXBhY2l0eSIsInZhbHVlcyIsImFwcGVuZCIsImFwcGVuZGxlZnQiLCJ4IiwiY2xlYXIiLCJjb3B5IiwicG9wIiwicG9wbGVmdCIsImdldCIsImkiLCJzZXQiXSwibWFwcGluZ3MiOiI7Ozs7O2tCQUd3QkEsa0I7O0FBSHhCOztBQUNBOzs7Ozs7QUFFZSxTQUFTQSxrQkFBVCxDQUE4QkMsUUFBOUIsRUFBeUM7O0FBRXZELE1BQUtDLEtBQUwsR0FBYSxJQUFiOztBQUVBLE1BQUtDLEtBQUwsR0FBYSxDQUFiOztBQUVBLEtBQUtGLGFBQWEsSUFBbEIsRUFBeUIsS0FBS0csTUFBTCxDQUFhSCxRQUFiO0FBRXpCOztBQUVERCxtQkFBbUJLLFNBQW5CLEdBQStCLHFCQUEvQjs7QUFFQUwsbUJBQW1CSyxTQUFuQixDQUE2QkMsR0FBN0IsR0FBbUMsWUFBYTs7QUFFL0MsUUFBTyxLQUFLSixLQUFMLEdBQWEsQ0FBYixHQUFpQixDQUF4QjtBQUVBLENBSkQ7O0FBTUFGLG1CQUFtQkssU0FBbkIsQ0FBNkJFLFFBQTdCLEdBQXdDLFlBQWE7O0FBRXBELFFBQU8sQ0FBUDtBQUVBLENBSkQ7O0FBTUFQLG1CQUFtQkssU0FBbkIsQ0FBNkJHLE1BQTdCLDJCQUFzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFFaEMsS0FBS04sS0FGMkI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBLFlBSS9CLEtBQUtDLEtBSjBCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXRDOztBQVFBSCxtQkFBbUJLLFNBQW5CLENBQTZCSSxNQUE3QixHQUNBVCxtQkFBbUJLLFNBQW5CLENBQTZCSyxVQUE3QixHQUEwQyxVQUFXQyxDQUFYLEVBQWU7O0FBRXhELE1BQUtULEtBQUwsR0FBYSxLQUFiO0FBQ0EsTUFBS0MsS0FBTCxHQUFhUSxDQUFiOztBQUVBLFFBQU8sSUFBUDtBQUVBLENBUkQ7O0FBVUFYLG1CQUFtQkssU0FBbkIsQ0FBNkJPLEtBQTdCLEdBQXFDLFlBQWE7O0FBRWpELE1BQUtWLEtBQUwsR0FBYSxJQUFiO0FBQ0EsTUFBS0MsS0FBTCxHQUFhLENBQWI7O0FBRUEsUUFBTyxJQUFQO0FBRUEsQ0FQRDs7QUFTQUgsbUJBQW1CSyxTQUFuQixDQUE2QlEsSUFBN0IsR0FBb0MsWUFBYTs7QUFFaEQsUUFBTyxJQUFJYixrQkFBSixDQUF3QixJQUF4QixDQUFQO0FBRUEsQ0FKRDs7QUFNQUEsbUJBQW1CSyxTQUFuQixDQUE2QlMsR0FBN0IsR0FDQWQsbUJBQW1CSyxTQUFuQixDQUE2QlUsT0FBN0IsR0FBdUMsWUFBYTs7QUFFbkQsS0FBSyxLQUFLYixLQUFWLEVBQWtCLE1BQU0sc0JBQWdCLGVBQWhCLENBQU47O0FBRWxCLEtBQU1DLFFBQVEsS0FBS0EsS0FBbkI7O0FBRUEsTUFBS0QsS0FBTCxHQUFhLElBQWI7QUFDQSxNQUFLQyxLQUFMLEdBQWEsQ0FBYjs7QUFFQSxRQUFPQSxLQUFQO0FBRUEsQ0FaRDs7QUFjQUgsbUJBQW1CSyxTQUFuQixDQUE2QlcsR0FBN0IsR0FBbUMsVUFBV0MsQ0FBWCxFQUFlOztBQUVqRCxLQUFLLEtBQUtmLEtBQUwsSUFBY2UsTUFBTSxDQUF6QixFQUE2QixNQUFNLHNCQUFnQkEsQ0FBaEIsQ0FBTjs7QUFFN0IsUUFBTyxLQUFLZCxLQUFaO0FBRUEsQ0FORDs7QUFRQUgsbUJBQW1CSyxTQUFuQixDQUE2QmEsR0FBN0IsR0FBbUMsVUFBV0QsQ0FBWCxFQUFlZCxLQUFmLEVBQXVCOztBQUV6RCxLQUFLLEtBQUtELEtBQUwsSUFBY2UsTUFBTSxDQUF6QixFQUE2QixNQUFNLHNCQUFnQkEsQ0FBaEIsQ0FBTjs7QUFFN0IsTUFBS2QsS0FBTCxHQUFhQSxLQUFiOztBQUVBLFFBQU8sSUFBUDtBQUVBLENBUkQiLCJmaWxlIjoiU2luZ2xlRWxlbWVudERlcXVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5kZXhFcnJvciB9IGZyb20gJy4uLy4uL2Vycm9yJyA7XG5pbXBvcnQgRGVxdWUgZnJvbSAnLi9EZXF1ZScgO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaW5nbGVFbGVtZW50RGVxdWUgKCBpdGVyYWJsZSApIHtcblxuXHR0aGlzLmVtcHR5ID0gdHJ1ZSA7XG5cblx0dGhpcy52YWx1ZSA9IDAgO1xuXG5cdGlmICggaXRlcmFibGUgIT09IG51bGwgKSB0aGlzLmV4dGVuZCggaXRlcmFibGUgKSA7XG5cbn1cblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZSA9IG5ldyBEZXF1ZSggKSA7XG5cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUubGVuID0gZnVuY3Rpb24gKCApIHtcblxuXHRyZXR1cm4gdGhpcy5lbXB0eSA/IDAgOiAxIDtcblxufSA7XG5cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUuY2FwYWNpdHkgPSBmdW5jdGlvbiAoICkge1xuXG5cdHJldHVybiAxIDtcblxufSA7XG5cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUudmFsdWVzID0gZnVuY3Rpb24qICggKSB7XG5cblx0aWYgKCB0aGlzLmVtcHR5ICkgcmV0dXJuIDtcblxuXHR5aWVsZCB0aGlzLnZhbHVlIDtcblxufSA7XG5cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUuYXBwZW5kID1cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUuYXBwZW5kbGVmdCA9IGZ1bmN0aW9uICggeCApIHtcblxuXHR0aGlzLmVtcHR5ID0gZmFsc2UgO1xuXHR0aGlzLnZhbHVlID0geCA7XG5cblx0cmV0dXJuIHRoaXMgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uICggKSB7XG5cblx0dGhpcy5lbXB0eSA9IHRydWUgO1xuXHR0aGlzLnZhbHVlID0gMCA7XG5cblx0cmV0dXJuIHRoaXMgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5jb3B5ID0gZnVuY3Rpb24gKCApIHtcblxuXHRyZXR1cm4gbmV3IFNpbmdsZUVsZW1lbnREZXF1ZSggdGhpcyApIDtcblxufSA7XG5cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUucG9wID1cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUucG9wbGVmdCA9IGZ1bmN0aW9uICggKSB7XG5cblx0aWYgKCB0aGlzLmVtcHR5ICkgdGhyb3cgbmV3IEluZGV4RXJyb3IoIFwicG9wIC8gcG9wbGVmdFwiICkgO1xuXG5cdGNvbnN0IHZhbHVlID0gdGhpcy52YWx1ZSA7XG5cblx0dGhpcy5lbXB0eSA9IHRydWUgO1xuXHR0aGlzLnZhbHVlID0gMCA7XG5cblx0cmV0dXJuIHZhbHVlIDtcblxufSA7XG5cblNpbmdsZUVsZW1lbnREZXF1ZS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKCBpICkge1xuXG5cdGlmICggdGhpcy5lbXB0eSB8fCBpICE9PSAwICkgdGhyb3cgbmV3IEluZGV4RXJyb3IoIGkgKSA7XG5cblx0cmV0dXJuIHRoaXMudmFsdWUgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoIGkgLCB2YWx1ZSApIHtcblxuXHRpZiAoIHRoaXMuZW1wdHkgfHwgaSAhPT0gMCApIHRocm93IG5ldyBJbmRleEVycm9yKCBpICkgO1xuXG5cdHRoaXMudmFsdWUgPSB2YWx1ZSA7XG5cblx0cmV0dXJuIHRoaXMgO1xuXG59IDtcbiJdfQ==