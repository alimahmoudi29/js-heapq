"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var SingleElementDeque = exports.SingleElementDeque = function SingleElementDeque(iterable) {

	this.empty = true;

	this.value = 0;

	if (iterable !== null) this.extend(iterable);
};

SingleElementDeque.prototype = new Deque();

SingleElementDeque.prototype.len = function () {

	return this.empty ? 0 : 1;
};

SingleElementDeque.prototype.capacity = function () {

	return 1;
};

SingleElementDeque.prototype.values = regeneratorRuntime.mark(function _callee() {
	return regeneratorRuntime.wrap(function _callee$(_context) {
		while (1) {
			switch (_context.prev = _context.next) {
				case 0:
					if (!this.empty) {
						_context.next = 2;
						break;
					}

					return _context.abrupt("return");

				case 2:
					_context.next = 4;
					return this.value;

				case 4:
				case "end":
					return _context.stop();
			}
		}
	}, _callee, this);
});

SingleElementDeque.prototype.append = SingleElementDeque.prototype.appendleft = function (x) {

	this.empty = false;
	this.value = x;

	return this;
};

SingleElementDeque.prototype.clear = function () {

	this.empty = true;
	this.value = 0;

	return this;
};

SingleElementDeque.prototype.copy = function () {

	return new SingleElementDeque(this);
};

SingleElementDeque.prototype.pop = SingleElementDeque.prototype.popleft = function () {

	if (this.empty) throw new IndexError("pop / popleft");

	var value = this.value;

	this.empty = true;
	this.value = 0;

	return value;
};

SingleElementDeque.prototype.get = function (i) {

	if (this.empty || i !== 0) throw new IndexError(i);

	return this.value;
};

SingleElementDeque.prototype.set = function (i, value) {

	if (this.empty || i !== 0) throw new IndexError(i);

	this.value = value;

	return this;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kZXF1ZS9EZXF1ZS9TaW5nbGVFbGVtZW50RGVxdWUuanMiXSwibmFtZXMiOlsiU2luZ2xlRWxlbWVudERlcXVlIiwiaXRlcmFibGUiLCJlbXB0eSIsInZhbHVlIiwiZXh0ZW5kIiwicHJvdG90eXBlIiwiRGVxdWUiLCJsZW4iLCJjYXBhY2l0eSIsInZhbHVlcyIsImFwcGVuZCIsImFwcGVuZGxlZnQiLCJ4IiwiY2xlYXIiLCJjb3B5IiwicG9wIiwicG9wbGVmdCIsIkluZGV4RXJyb3IiLCJnZXQiLCJpIiwic2V0Il0sIm1hcHBpbmdzIjoiOzs7OztBQUNPLElBQU1BLGtEQUFxQixTQUFyQkEsa0JBQXFCLENBQVdDLFFBQVgsRUFBc0I7O0FBRXZELE1BQUtDLEtBQUwsR0FBYSxJQUFiOztBQUVBLE1BQUtDLEtBQUwsR0FBYSxDQUFiOztBQUVBLEtBQUtGLGFBQWEsSUFBbEIsRUFBeUIsS0FBS0csTUFBTCxDQUFhSCxRQUFiO0FBRXpCLENBUk07O0FBVVBELG1CQUFtQkssU0FBbkIsR0FBK0IsSUFBSUMsS0FBSixFQUEvQjs7QUFFQU4sbUJBQW1CSyxTQUFuQixDQUE2QkUsR0FBN0IsR0FBbUMsWUFBYTs7QUFFL0MsUUFBTyxLQUFLTCxLQUFMLEdBQWEsQ0FBYixHQUFpQixDQUF4QjtBQUVBLENBSkQ7O0FBTUFGLG1CQUFtQkssU0FBbkIsQ0FBNkJHLFFBQTdCLEdBQXdDLFlBQWE7O0FBRXBELFFBQU8sQ0FBUDtBQUVBLENBSkQ7O0FBTUFSLG1CQUFtQkssU0FBbkIsQ0FBNkJJLE1BQTdCLDJCQUFzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFFaEMsS0FBS1AsS0FGMkI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBLFlBSS9CLEtBQUtDLEtBSjBCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXRDOztBQVFBSCxtQkFBbUJLLFNBQW5CLENBQTZCSyxNQUE3QixHQUNBVixtQkFBbUJLLFNBQW5CLENBQTZCTSxVQUE3QixHQUEwQyxVQUFXQyxDQUFYLEVBQWU7O0FBRXhELE1BQUtWLEtBQUwsR0FBYSxLQUFiO0FBQ0EsTUFBS0MsS0FBTCxHQUFhUyxDQUFiOztBQUVBLFFBQU8sSUFBUDtBQUVBLENBUkQ7O0FBVUFaLG1CQUFtQkssU0FBbkIsQ0FBNkJRLEtBQTdCLEdBQXFDLFlBQWE7O0FBRWpELE1BQUtYLEtBQUwsR0FBYSxJQUFiO0FBQ0EsTUFBS0MsS0FBTCxHQUFhLENBQWI7O0FBRUEsUUFBTyxJQUFQO0FBRUEsQ0FQRDs7QUFTQUgsbUJBQW1CSyxTQUFuQixDQUE2QlMsSUFBN0IsR0FBb0MsWUFBYTs7QUFFaEQsUUFBTyxJQUFJZCxrQkFBSixDQUF3QixJQUF4QixDQUFQO0FBRUEsQ0FKRDs7QUFNQUEsbUJBQW1CSyxTQUFuQixDQUE2QlUsR0FBN0IsR0FDQWYsbUJBQW1CSyxTQUFuQixDQUE2QlcsT0FBN0IsR0FBdUMsWUFBYTs7QUFFbkQsS0FBSyxLQUFLZCxLQUFWLEVBQWtCLE1BQU0sSUFBSWUsVUFBSixDQUFnQixlQUFoQixDQUFOOztBQUVsQixLQUFNZCxRQUFRLEtBQUtBLEtBQW5COztBQUVBLE1BQUtELEtBQUwsR0FBYSxJQUFiO0FBQ0EsTUFBS0MsS0FBTCxHQUFhLENBQWI7O0FBRUEsUUFBT0EsS0FBUDtBQUVBLENBWkQ7O0FBY0FILG1CQUFtQkssU0FBbkIsQ0FBNkJhLEdBQTdCLEdBQW1DLFVBQVdDLENBQVgsRUFBZTs7QUFFakQsS0FBSyxLQUFLakIsS0FBTCxJQUFjaUIsTUFBTSxDQUF6QixFQUE2QixNQUFNLElBQUlGLFVBQUosQ0FBZ0JFLENBQWhCLENBQU47O0FBRTdCLFFBQU8sS0FBS2hCLEtBQVo7QUFFQSxDQU5EOztBQVFBSCxtQkFBbUJLLFNBQW5CLENBQTZCZSxHQUE3QixHQUFtQyxVQUFXRCxDQUFYLEVBQWVoQixLQUFmLEVBQXVCOztBQUV6RCxLQUFLLEtBQUtELEtBQUwsSUFBY2lCLE1BQU0sQ0FBekIsRUFBNkIsTUFBTSxJQUFJRixVQUFKLENBQWdCRSxDQUFoQixDQUFOOztBQUU3QixNQUFLaEIsS0FBTCxHQUFhQSxLQUFiOztBQUVBLFFBQU8sSUFBUDtBQUVBLENBUkQiLCJmaWxlIjoiU2luZ2xlRWxlbWVudERlcXVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgY29uc3QgU2luZ2xlRWxlbWVudERlcXVlID0gZnVuY3Rpb24gKCBpdGVyYWJsZSApIHtcblxuXHR0aGlzLmVtcHR5ID0gdHJ1ZSA7XG5cblx0dGhpcy52YWx1ZSA9IDAgO1xuXG5cdGlmICggaXRlcmFibGUgIT09IG51bGwgKSB0aGlzLmV4dGVuZCggaXRlcmFibGUgKSA7XG5cbn0gO1xuXG5TaW5nbGVFbGVtZW50RGVxdWUucHJvdG90eXBlID0gbmV3IERlcXVlKCApIDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5sZW4gPSBmdW5jdGlvbiAoICkge1xuXG5cdHJldHVybiB0aGlzLmVtcHR5ID8gMCA6IDEgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5jYXBhY2l0eSA9IGZ1bmN0aW9uICggKSB7XG5cblx0cmV0dXJuIDEgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS52YWx1ZXMgPSBmdW5jdGlvbiogKCApIHtcblxuXHRpZiAoIHRoaXMuZW1wdHkgKSByZXR1cm4gO1xuXG5cdHlpZWxkIHRoaXMudmFsdWUgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5hcHBlbmQgPVxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5hcHBlbmRsZWZ0ID0gZnVuY3Rpb24gKCB4ICkge1xuXG5cdHRoaXMuZW1wdHkgPSBmYWxzZSA7XG5cdHRoaXMudmFsdWUgPSB4IDtcblxuXHRyZXR1cm4gdGhpcyA7XG5cbn0gO1xuXG5TaW5nbGVFbGVtZW50RGVxdWUucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCApIHtcblxuXHR0aGlzLmVtcHR5ID0gdHJ1ZSA7XG5cdHRoaXMudmFsdWUgPSAwIDtcblxuXHRyZXR1cm4gdGhpcyA7XG5cbn0gO1xuXG5TaW5nbGVFbGVtZW50RGVxdWUucHJvdG90eXBlLmNvcHkgPSBmdW5jdGlvbiAoICkge1xuXG5cdHJldHVybiBuZXcgU2luZ2xlRWxlbWVudERlcXVlKCB0aGlzICkgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5wb3AgPVxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5wb3BsZWZ0ID0gZnVuY3Rpb24gKCApIHtcblxuXHRpZiAoIHRoaXMuZW1wdHkgKSB0aHJvdyBuZXcgSW5kZXhFcnJvciggXCJwb3AgLyBwb3BsZWZ0XCIgKSA7XG5cblx0Y29uc3QgdmFsdWUgPSB0aGlzLnZhbHVlIDtcblxuXHR0aGlzLmVtcHR5ID0gdHJ1ZSA7XG5cdHRoaXMudmFsdWUgPSAwIDtcblxuXHRyZXR1cm4gdmFsdWUgO1xuXG59IDtcblxuU2luZ2xlRWxlbWVudERlcXVlLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoIGkgKSB7XG5cblx0aWYgKCB0aGlzLmVtcHR5IHx8IGkgIT09IDAgKSB0aHJvdyBuZXcgSW5kZXhFcnJvciggaSApIDtcblxuXHRyZXR1cm4gdGhpcy52YWx1ZSA7XG5cbn0gO1xuXG5TaW5nbGVFbGVtZW50RGVxdWUucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uICggaSAsIHZhbHVlICkge1xuXG5cdGlmICggdGhpcy5lbXB0eSB8fCBpICE9PSAwICkgdGhyb3cgbmV3IEluZGV4RXJyb3IoIGkgKSA7XG5cblx0dGhpcy52YWx1ZSA9IHZhbHVlIDtcblxuXHRyZXR1cm4gdGhpcyA7XG5cbn0gO1xuIl19